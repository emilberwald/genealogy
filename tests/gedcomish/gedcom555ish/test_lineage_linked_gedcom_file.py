import pathlib
import tempfile
import contextlib
import inspect

from gedcomish.common import GEDCOM_LINES

from gedcomish.gedcom555ish.lineage_linked_gedcom_file import (
    ADDRESS_CITY,
    ADDRESS_COUNTRY,
    ADDRESS_EMAIL,
    ADDRESS_FAX,
    ADDRESS_LINE1,
    ADDRESS_LINE2,
    ADDRESS_LINE3,
    ADDRESS_POSTAL_CODE,
    ADDRESS_STATE,
    ADDRESS_STRUCTURE,
    ADDRESS_WEB_PAGE,
    ADOPTED_BY_WHICH_PARENT,
    AGE_AT_EVENT,
    ASSOCIATION_STRUCTURE,
    ATTRIBUTE_DESCRIPTOR,
    ATTRIBUTE_TYPE,
    AUTOMATED_RECORD_ID,
    BEFORE_COMMON_ERA,
    CASTE_NAME,
    CAUSE_OF_EVENT,
    CERTAINTY_ASSESSMENT,
    CHANGE_DATE,
    CHARACTER_ENCODING,
    CHILD_TO_FAMILY_LINK,
    COPYRIGHT_GEDCOM_FILE,
    COPYRIGHT_SOURCE_DATA,
    COUNT_OF_CHILDREN,
    DATE,
    DATE_APPROXIMATED,
    DATE_CALENDAR,
    DATE_CALENDAR_ESCAPE,
    DATE_EXACT,
    DATE_FREN,
    DATE_GREG,
    DATE_HEBR,
    DATE_JULN,
    DATE_PERIOD,
    DATE_PHRASE,
    DATE_RANGE,
    DATE_VALUE,
    DAY,
    DESCRIPTIVE_TITLE,
    DIGIT,
    DUAL_STYLE_YEAR,
    ENTRY_RECORDING_DATE,
    EVENT_ATTRIBUTE_TYPE,
    EVENT_DESCRIPTOR,
    EVENT_DETAIL,
    EVENT_OR_FACT_CLASSIFICATION,
    EVENT_TYPE_CITED_FROM,
    EVENT_TYPE_FAMILY,
    EVENT_TYPE_INDIVIDUAL,
    EVENTS_RECORDED,
    FAMILY_EVENT_DETAIL,
    FAMILY_EVENT_STRUCTUREs,
    FILE_CREATION_DATE,
    FORM_RECORDS,
    GEDCOM_CONTENT_DESCRIPTION,
    GEDCOM_FILE_NAME,
    GEDCOM_FORM,
    GEDCOM_FORM_HEADER_EXTENSION,
    GEDCOM_HEADER,
    GEDCOM_TRAILER,
    GEDCOM_VERSION_NUMBER,
    ID_NUMBER,
    INDIVIDUAL_ATTRIBUTE_STRUCTUREs,
    INDIVIDUAL_EVENT_DETAIL,
    INDIVIDUAL_EVENT_STRUCTUREs,
    LANGUAGE_ID,
    LANGUAGE_OF_TEXT,
    LINEAGE_LINKED_GEDCOM_FILE,
    LINEAGE_LINKED_RECORDs,
    MONTH,
    MONTH_FREN,
    MONTH_HEBR,
    MULTIMEDIA_FILE_REFERENCE,
    MULTIMEDIA_FORMAT,
    MULTIMEDIA_LINK,
    NAME_OF_BUSINESS,
    NAME_OF_PRODUCT,
    NAME_OF_REPOSITORY,
    NAME_OF_SOURCE_DATA,
    NAME_PERSONAL,
    NAME_PHONETIC,
    NAME_PIECE,
    NAME_PIECE_GIVEN,
    NAME_PIECE_NICKNAME,
    NAME_PIECE_PREFIX,
    NAME_PIECE_SUFFIX,
    NAME_PIECE_SURNAME,
    NAME_PIECE_SURNAME_PREFIX,
    NAME_ROMANISED,
    NAME_TEXT,
    NAME_TYPE,
    NATIONAL_OR_TRIBAL_ORIGIN,
    NOBILITY_TYPE_TITLE,
    NOTE_STRUCTURE,
    NULL,
    NUMBER,
    NUMBER_OF_RELATIONSHIPS,
    OCCUPATION,
    PEDIGREE_LINKAGE_TYPE,
    PERSONAL_NAME_PIECES,
    PERSONAL_NAME_STRUCTURE,
    PHONE_NUMBER,
    PHONETISATION_METHOD,
    PHYSICAL_DESCRIPTION,
    PLACE_LATITUDE,
    PLACE_LONGITUDE,
    PLACE_NAME,
    PLACE_PHONETIC,
    PLACE_ROMANISED,
    PLACE_STRUCTURE,
    PLACE_TEXT,
    POSSESSIONS,
    PRODUCT_VERSION_NUMBER,
    PUBLICATION_DATE,
    RECEIVING_SYSTEM_NAME,
    RELATION_IS_DESCRIPTOR,
    RELIGIOUS_AFFILIATION,
    RESPONSIBLE_AGENCY,
    ROLE_DESCRIPTOR,
    ROLE_IN_EVENT,
    ROMANISATION_METHOD,
    SCHOLASTIC_ACHIEVEMENT,
    SEX_VALUE,
    SOURCE_CALL_NUMBER,
    SOURCE_CITATION,
    SOURCE_DESCRIPTIVE_TITLE,
    SOURCE_FILED_BY_ENTRY,
    SOURCE_JURISDICTION_PLACE,
    SOURCE_MEDIA_TYPE,
    SOURCE_ORIGINATOR,
    SOURCE_PUBLICATION_FACTS,
    SOURCE_REPOSITORY_CITATION,
    SPOUSE_TO_FAMILY_LINK,
    SUBMITTER_NAME,
    SUBMITTER_RECORD,
    SYSTEM_ID,
    TEXT,
    TEXT_FROM_SOURCE,
    TIME_VALUE,
    USER_REFERENCE_NUMBER,
    USER_REFERENCE_TYPE,
    USER_TEXT,
    WHERE_WITHIN_SOURCE,
    XREF_FAM,
    XREF_INDI,
    XREF_NOTE,
    XREF_OBJE,
    XREF_REPO,
    XREF_SOUR,
    XREF_SUBM,
    YEAR,
)


@contextlib.contextmanager
def NamedTemporaryFile(*args, **kwargs):
    f = tempfile.NamedTemporaryFile(*args, delete=False, **kwargs)
    try:
        yield f
    finally:
        pathlib.Path(f.name).unlink()


class TestExampleFiles:
    def test_minimal555(self):
        minimal555 = LINEAGE_LINKED_GEDCOM_FILE()
        minimal555.GEDCOM_HEADER = GEDCOM_HEADER()
        minimal555.GEDCOM_HEADER.HEAD = GEDCOM_HEADER.HEAD()
        minimal555.GEDCOM_HEADER.HEAD.GEDC = GEDCOM_HEADER.HEAD.GEDC()
        minimal555.GEDCOM_HEADER.HEAD.GEDC.VERS = GEDCOM_HEADER.HEAD.GEDC.VERS("5.5.5")
        minimal555.GEDCOM_HEADER.HEAD.GEDC.FORM = GEDCOM_HEADER.HEAD.GEDC.FORM("LINEAGE-LINKED")
        minimal555.GEDCOM_HEADER.HEAD.GEDC.FORM.VERS = GEDCOM_HEADER.HEAD.GEDC.FORM.VERS("5.5.5")
        minimal555.GEDCOM_HEADER.HEAD.CHAR = GEDCOM_HEADER.HEAD.CHAR("UTF-8")
        minimal555.GEDCOM_FORM_HEADER_EXTENSION = GEDCOM_FORM_HEADER_EXTENSION()
        minimal555.GEDCOM_FORM_HEADER_EXTENSION.LINEAGE_LINKED_HEADER_EXTENSION = (
            GEDCOM_FORM_HEADER_EXTENSION.LINEAGE_LINKED_HEADER_EXTENSION()
        )
        minimal555.GEDCOM_FORM_HEADER_EXTENSION.LINEAGE_LINKED_HEADER_EXTENSION.SOUR = GEDCOM_FORM_HEADER_EXTENSION.LINEAGE_LINKED_HEADER_EXTENSION.SOUR(
            "gedcom.org"
        )
        minimal555.SUBMITTER_RECORD = SUBMITTER_RECORD()
        minimal555.SUBMITTER_RECORD.SUBM = SUBMITTER_RECORD.SUBM("U")
        minimal555.SUBMITTER_RECORD.SUBM.NAME = SUBMITTER_RECORD.SUBM.NAME("gedcom.org")
        minimal555.GEDCOM_TRAILER = GEDCOM_TRAILER()
        minimal555.GEDCOM_TRAILER.TRLR = GEDCOM_TRAILER.TRLR()
        lines = GEDCOM_LINES()
        lines = minimal555(lines)
        result = lines(0)
        print(result)
        with NamedTemporaryFile(suffix=".ged") as fp:
            fp.close()
            file = pathlib.Path(fp.name)
            file.write_text(result, encoding="utf-8-sig")
            actual = file.read_text()
            expected = (
                pathlib.Path(inspect.getframeinfo(inspect.currentframe()).filename).resolve().parent
                / pathlib.Path("MINIMAL555.GED")
            ).read_text()
            assert actual == expected

